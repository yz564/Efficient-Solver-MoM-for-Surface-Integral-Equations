#pragma once
#include "basicmath.h"

template<typename T>
vector<T> LookUpGaussWeights(int degree) {
	switch (degree) {
	case 1: {
		vector<T>  ans{ 1 };
		return ans;
	}
	case 2: {
		vector<T>  ans{ 0.3333333333333333, 0.3333333333333333, 0.3333333333333333 };
		return ans;
	}
	case 3: {
		vector<T>  ans { -0.5624999999999998, 0.5208333333333333, 0.5208333333333333, 0.5208333333333333 };
		return ans;
	}
	case 4: {
		vector<T>  ans{ 0.1099517436553219, 0.1099517436553219, 0.1099517436553219, 0.2233815896780115, 0.2233815896780115, 0.2233815896780115 };
		return ans;
	}
	case 5: {
		vector<T>  ans{ 0.2250000000000002, 0.1323941527885061, 0.1323941527885061, 0.1323941527885061, 0.1259391805448272, \
			0.1259391805448272, 0.1259391805448272 };
		return ans;
	}
	case 6: {
		vector<T>  ans{ 0.1713331241529811, 0.1713331241529811, 0.1713331241529811, 0.0807310895930309, 0.0807310895930309, \
			0.0807310895930309, 0.0406345597936607, 0.0406345597936607, 0.0406345597936607, 0.0406345597936607, 0.0406345597936607, 0.0406345597936607 };
		return ans;
	}
	case 7: {
		vector<T>  ans{ -0.1495700444676828,0.1756152574332084,0.1756152574332084,0.1756152574332084,0.0533472356088385,0.0533472356088385,\
			0.0533472356088385,0.0771137608902570,0.0771137608902570,0.0771137608902570,0.0771137608902570,0.0771137608902570,0.0771137608902570 };
		return ans;
	}
	default: 
		vector<T>  ans{ 1 };
		return ans;
	}
}

template<typename T>
vector<vector<T> > LookUpGaussPoints(const vector<vector<T> >& r, int degree) {
	switch (degree) {
	case 1: {
		T a[] = { 0.3333333333333333 };
		T b[] = { 0.3333333333333333 };
		T c[] = { 0.3333333333333333 };
		vector<vector<T> > ans(1);
		ans[0] = (myVecPlus(myVecPlus(myVecNumProd(r[0], a[0]), myVecNumProd(r[1], b[0])), myVecNumProd(r[2], c[0])));
		return ans;
	}
	case 2: {
		T a[] = { 0.666666666666667,0.166666666666667,0.166666666666667 };
		T b[] = { 0.166666666666667,0.166666666666667,0.666666666666667 };
		T c[] = { 0.166666666666666,0.666666666666667,0.166666666666667 };
		vector<vector<T> > ans(3);
		for (int i = 0; i < 3; ++i) {
			(ans)[i] = myVecPlus(myVecPlus(myVecNumProd(r[0], a[i]), myVecNumProd(r[1], b[i])), myVecNumProd(r[2], c[i]));
		}
		return ans;
	}
	case 3: {
		T a[] = { 0.3333333333333333,0.6,0.2,0.2 };
		T b[] = { 0.3333333333333333,0.2,0.2,0.6 };
		T c[] = { 0.3333333333333333,0.2,0.6,0.2 };
		vector<vector<T> > ans(4);
		for (int i = 0; i < 4; ++i) {
			(ans)[i] = myVecPlus(myVecPlus(myVecNumProd(r[0], a[i]), myVecNumProd(r[1], b[i])), myVecNumProd(r[2], c[i]));
		}
		return ans;
	}
	case 4: {
		T a[] = { 0.8168475729804585,0.0915762135097707,0.0915762135097707,0.1081030181680702,0.4459484909159649,0.4459484909159649 };
		T b[] = { 0.0915762135097707,0.0915762135097707,0.8168475729804585,0.4459484909159649,0.4459484909159649,0.1081030181680702 };
		T c[] = { 0.0915762135097707,0.8168475729804585,0.0915762135097707,0.4459484909159649,0.1081030181680702,0.4459484909159649 };
		vector<vector<T> > ans(6);
		for (int i = 0; i < 6; ++i) {
			(ans)[i] = myVecPlus(myVecPlus(myVecNumProd(r[0], a[i]), myVecNumProd(r[1], b[i])), myVecNumProd(r[2], c[i]));
		}
		return ans;
	}
	case 5: {
		T a[] = { 0.3333333333333333,0.0597158717897698,0.4701420641051151,0.4701420641051151,0.7974269853530873,\
			0.1012865073234563,0.1012865073234563 };
		T b[] = { 0.3333333333333333,0.4701420641051151,0.4701420641051151,0.0597158717897698,0.1012865073234563,\
			0.1012865073234563,0.7974269853530873 };
		T c[] = { 0.3333333333333333,0.4701420641051151,0.0597158717897698,0.4701420641051151,0.1012865073234563,\
			0.7974269853530873,0.1012865073234563 };
		vector<vector<T> > ans(7);
		for (int i = 0; i < 7; ++i) {
			(ans)[i] = myVecPlus(myVecPlus(myVecNumProd(r[0], a[i]), myVecNumProd(r[1], b[i])), myVecNumProd(r[2], c[i]));
		}
		return ans;
	}
	
	case 6: {
		T a[] = { 0.5611400349004341,0.2194299825497830,0.2194299825497830,0.0397240717755698,0.4801379641122151,\
			0.4801379641122151,0.0193717243612408,0.1416190159239682,0.8390092597147911,0.1416190159239682,0.0193717243612408,0.8390092597147911 };
		T b[] = { 0.2194299825497830,0.2194299825497830,0.5611400349004341,0.4801379641122151,0.4801379641122151,\
			0.0397240717755698,0.1416190159239682,0.8390092597147911,0.0193717243612408,0.0193717243612408,0.8390092597147911,0.1416190159239682 };
		T c[] = { 0.2194299825497830,0.5611400349004341,0.2194299825497830,0.4801379641122151,0.0397240717755698,\
			0.4801379641122151,0.8390092597147911,0.0193717243612408,0.1416190159239682,0.8390092597147911,0.1416190159239682,0.0193717243612408 };
		vector<vector<T> > ans(12);
		for (int i = 0; i < 12; ++i) {
			(ans)[i] = myVecPlus(myVecPlus(myVecNumProd(r[0], a[i]), myVecNumProd(r[1], b[i])), myVecNumProd(r[2], c[i]));
		}
		return ans;
	}
	case 7: {
		T a[] = { 0.3333333333333333,0.4793080678419204,0.2603459660790398,0.2603459660790398,0.8697397941955683,\
			0.0651301029022158,0.0651301029022158,0.0486903154253163,0.6384441885698098,0.3128654960048739,0.6384441885698098,0.0486903154253163,0.3128654960048739 };
		T b[] = { 0.3333333333333333,0.2603459660790398,0.2603459660790398,0.4793080678419204,0.0651301029022158,\
			0.0651301029022158,0.8697397941955683,0.6384441885698098,0.3128654960048739,0.0486903154253163,0.0486903154253163,0.3128654960048739,0.6384441885698098 };
		T c[] = { 0.333333333333333,0.260345966079040,0.479308067841920,0.260345966079040,0.065130102902216,\
			0.869739794195568,0.065130102902216,0.312865496004874,0.048690315425316,0.638444188569810,0.312865496004874, 0.638444188569810,0.048690315425316 };
		vector<vector<T> > ans(13);
		for (int i = 0; i < 13; ++i) {
			(ans)[i] = myVecPlus(myVecPlus(myVecNumProd(r[0], a[i]), myVecNumProd(r[1], b[i])), myVecNumProd(r[2], c[i]));
		}
		return ans;
	}
	default:
		T a[] = { 0.3333333333333333 };
		T b[] = { 0.3333333333333333 };
		T c[] = { 0.3333333333333333 };
		vector<vector<T> > ans(1);
		ans[0] = (myVecPlus(myVecPlus(myVecNumProd(r[0], a[0]), myVecNumProd(r[1], b[0])), myVecNumProd(r[2], c[0])));
		return ans;
	}
}